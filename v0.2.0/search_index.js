var documenterSearchIndex = {"docs":
[{"location":"about/#About-1","page":"About","title":"About","text":"","category":"section"},{"location":"about/#","page":"About","title":"About","text":"This page contains some general information about this project, and recommendations about contributing.","category":"page"},{"location":"about/#","page":"About","title":"About","text":"Pages = [\"about.md\"]","category":"page"},{"location":"about/#Contributing-1","page":"About","title":"Contributing","text":"","category":"section"},{"location":"about/#","page":"About","title":"About","text":"If you like this package, consider contributing! You can send bug reports (or fix them and send your code), add examples to the documentation or propose new features.","category":"page"},{"location":"about/#","page":"About","title":"About","text":"Below we detail some of the guidelines that should be followed when contributing to this package.","category":"page"},{"location":"about/#Branches-1","page":"About","title":"Branches","text":"","category":"section"},{"location":"about/#","page":"About","title":"About","text":"Each pull request (PR) should be pushed in a new branch with the name of the author followed by a descriptive name, e.g. mforets/my_feature. If the branch is associated to a previous discussion in one issue, we use the name of the issue for easier lookup, e.g. mforets/7.","category":"page"},{"location":"about/#Unit-testing-and-continuous-integration-(CI)-1","page":"About","title":"Unit testing and continuous integration (CI)","text":"","category":"section"},{"location":"about/#","page":"About","title":"About","text":"This project is synchronized with Travis CI, such that each PR gets tested before merging (and the build is automatically triggered after each new commit).","category":"page"},{"location":"about/#","page":"About","title":"About","text":"For the maintainability of this project, we try to understand and fix the failing doctests if they exist. We develop in Julia v1.0, but for experimentation we also build on the nightly branch.","category":"page"},{"location":"about/#","page":"About","title":"About","text":"To run the unit tests locally, you should do:","category":"page"},{"location":"about/#","page":"About","title":"About","text":"$ julia --color=yes test/runtests.jl","category":"page"},{"location":"about/#Contributing-to-the-documentation-1","page":"About","title":"Contributing to the documentation","text":"","category":"section"},{"location":"about/#","page":"About","title":"About","text":"This documentation is written in Markdown, and it relies on Documenter.jl to produce the HTML layout. To build the docs, run make.jl:","category":"page"},{"location":"about/#","page":"About","title":"About","text":"$ julia --color=yes docs/make.jl","category":"page"},{"location":"about/#Credits-1","page":"About","title":"Credits","text":"","category":"section"},{"location":"about/#","page":"About","title":"About","text":"These persons have contributed to IntervalMatrices.jl (in alphabetic order):","category":"page"},{"location":"about/#","page":"About","title":"About","text":"Marcelo Forets\nChristian Schilling","category":"page"},{"location":"lib/types/#Types-1","page":"Types","title":"Types","text":"","category":"section"},{"location":"lib/types/#","page":"Types","title":"Types","text":"This section describes systems types implemented in IntervalMatrices.jl.","category":"page"},{"location":"lib/types/#","page":"Types","title":"Types","text":"Pages = [\"types.md\"]\nDepth = 3","category":"page"},{"location":"lib/types/#","page":"Types","title":"Types","text":"CurrentModule = IntervalMatrices","category":"page"},{"location":"lib/types/#Abstract-interval-operators-1","page":"Types","title":"Abstract interval operators","text":"","category":"section"},{"location":"lib/types/#","page":"Types","title":"Types","text":"AbstractIntervalMatrix","category":"page"},{"location":"lib/types/#IntervalMatrices.AbstractIntervalMatrix","page":"Types","title":"IntervalMatrices.AbstractIntervalMatrix","text":"AbstractIntervalMatrix{IT} <: AbstractMatrix{IT}\n\nAbstract supertype for interval matrix types.\n\n\n\n\n\n","category":"type"},{"location":"lib/types/#Interval-matrix-1","page":"Types","title":"Interval matrix","text":"","category":"section"},{"location":"lib/types/#","page":"Types","title":"Types","text":"IntervalMatrix","category":"page"},{"location":"lib/types/#IntervalMatrices.IntervalMatrix","page":"Types","title":"IntervalMatrices.IntervalMatrix","text":"IntervalMatrix{T, IT<:AbstractInterval{T}, M<:AbstractMatrix{IT}} <:\n    AbstractIntervalMatrix{IT}\n\nInterval matrix, this type is parametrized in the number field and the type of interval set.\n\nFields\n\nmat – matrix whose entries are intervals\n\nExamples\n\njulia> A = IntervalMatrix([-0.9±0.1 0±0; 0±0 -0.9±0.1])\n2×2 IntervalMatrix{Float64,Interval{:closed,:closed,Float64},Array{Interval{:closed,:closed,Float64},2}}:\n -1.0..-0.8  0.0..0.0\n 0.0..0.0    -1.0..-0.8\n\n\n\n\n\n","category":"type"},{"location":"#IntervalMatrices.jl-1","page":"Home","title":"IntervalMatrices.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"IntervalMatrices is a Julia package to work with matrices that have uncertain parameters.","category":"page"},{"location":"#Features-1","page":"Home","title":"Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"An IntervalMatrix type.\nArithmetics between scalars, closed intervals and interval matrices.\nOverapproximation and underapproximation routines for the exponential of an interval matrix at different orders.","category":"page"},{"location":"#Library-Outline-1","page":"Home","title":"Library Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"IntervalMatrices","category":"page"},{"location":"#IntervalMatrices","page":"Home","title":"IntervalMatrices","text":"Main module for IntervalMatrices.jl – a Julia package to work with matrices that have uncertain parameters.\n\n\n\n\n\n","category":"module"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n    \"lib/types.md\",\n    \"lib/methods.md\"\n]\nDepth = 2","category":"page"},{"location":"lib/methods/#Methods-1","page":"Methods","title":"Methods","text":"","category":"section"},{"location":"lib/methods/#","page":"Methods","title":"Methods","text":"This section describes systems methods implemented in IntervalMatrices.jl.","category":"page"},{"location":"lib/methods/#","page":"Methods","title":"Methods","text":"Pages = [\"methods.md\"]\nDepth = 3","category":"page"},{"location":"lib/methods/#","page":"Methods","title":"Methods","text":"CurrentModule = IntervalMatrices","category":"page"},{"location":"lib/methods/#","page":"Methods","title":"Methods","text":"opnorm\nleft\nright\nquadratic_expansion\nexpm_overapproximation\nexpm_underapproximation\nrand\nsplit\n∈","category":"page"},{"location":"lib/methods/#LinearAlgebra.opnorm","page":"Methods","title":"LinearAlgebra.opnorm","text":"opnorm(A::IntervalMatrix, p::Real=Inf)\n\nThe matrix norm of an interval matrix.\n\nInput\n\nA – interval matrix\np – (optional, default: Inf): the class of p-norm\n\nNotes\n\nThe matrix p-norm of an interval matrix A is defined as\n\n    A_p = max(textleft(A) textright(A))_p\n\nwhere max and  are taken elementwise.\n\n\n\n\n\n","category":"function"},{"location":"lib/methods/#IntervalMatrices.left","page":"Methods","title":"IntervalMatrices.left","text":"left(A::IntervalMatrix)\n\nThe left part of this interval matrix, which corresponds to the left of each interval element in the matrix.\n\nInput\n\nA – interval matrix\n\n\n\n\n\n","category":"function"},{"location":"lib/methods/#IntervalMatrices.right","page":"Methods","title":"IntervalMatrices.right","text":"right(A::IntervalMatrix)\n\nThe right part of this interval matrix, which corresponds to the right of each interval element in the matrix.\n\nInput\n\nA – interval matrix\n\n\n\n\n\n","category":"function"},{"location":"lib/methods/#IntervalMatrices.quadratic_expansion","page":"Methods","title":"IntervalMatrices.quadratic_expansion","text":"quadratic_expansion(A::IntervalMatrix, t, p)\n\nExactly compute the quadratic formula At + frac12A^2t^2 using interval arithmetics.\n\nInput\n\nA – interval matrix\nt – non-negative time value\n\nAlgorithm\n\nSee Lemma 1 in Reachability Analysis of Linear Systems with Uncertain Parameters and Inputs by M. Althoff, O. Stursberg, M. Buss.\n\n\n\n\n\n","category":"function"},{"location":"lib/methods/#IntervalMatrices.expm_overapproximation","page":"Methods","title":"IntervalMatrices.expm_overapproximation","text":"expm_overapproximation(M::IntervalMatrix{T, <: AbstractInterval{T}}, t, p) where {T}\n\nOverapproximation of the exponential of an interval matrix.\n\nInput\n\nA – interval matrix\nt – non-negative time value\np – order of the approximation\n\nAlgorithm\n\nSee Theorem 1 in Reachability Analysis of Linear Systems with Uncertain Parameters and Inputs by M. Althoff, O. Stursberg, M. Buss.\n\n\n\n\n\n","category":"function"},{"location":"lib/methods/#IntervalMatrices.expm_underapproximation","page":"Methods","title":"IntervalMatrices.expm_underapproximation","text":"expm_underapproximation(M::IntervalMatrix{T, <: AbstractInterval{T}}, t, p) where {T}\n\nOverapproximation of the exponential of an interval matrix.\n\nInput\n\nA – interval matrix\nt – non-negative time value\np – order of the approximation\n\nAlgorithm\n\nSee Theorem 2 in Reachability Analysis of Linear Systems with Uncertain Parameters and Inputs by M. Althoff, O. Stursberg, M. Buss.\n\n\n\n\n\n","category":"function"},{"location":"lib/methods/#Base.rand","page":"Methods","title":"Base.rand","text":"rand(A::IntervalMatrix{T}; rng::AbstractRNG=GLOBAL_RNG) where {T}\n\nSample a concrete matrix B from an interval matrix A such that every entry in B belongs to the corresponding interval in A.\n\nInput\n\nA   – interval matrix\nrng – (optional, default: GLOBAL_RNG) random-number generator\n\nOutput\n\nA concrete matrix.\n\n\n\n\n\n","category":"function"},{"location":"lib/methods/#Base.split","page":"Methods","title":"Base.split","text":"split(A::IntervalMatrix{T}) where {T}\n\nSplit an interval matrix A into two conventional matrices C and S such that A = C + -S S.\n\nInput\n\nA – interval matrix\n\nOutput\n\nA pair (C, S) such that the entries of C are the central points and the entries of S are the (nonnegative) radii of the intervals in A.\n\n\n\n\n\n","category":"function"},{"location":"lib/methods/#Base.:∈","page":"Methods","title":"Base.:∈","text":"∈(M::AbstractMatrix, A::AbstractIntervalMatrix)\n\nCheck whether a concrete matrix is an instance of an interval matrix.\n\nInput\n\nM – concrete matrix\nA – interval matrix\n\nOutput\n\ntrue iff M is an instance of A\n\nAlgorithm\n\nWe check for each entry in M whether it belongs to the corresponding interval in A.\n\n\n\n\n\n","category":"function"},{"location":"lib/methods/#Hulls-1","page":"Methods","title":"Hulls","text":"","category":"section"},{"location":"lib/methods/#","page":"Methods","title":"Methods","text":"correction_hull","category":"page"},{"location":"lib/methods/#IntervalMatrices.correction_hull","page":"Methods","title":"IntervalMatrices.correction_hull","text":"correction_hull(A::IntervalMatrix{T}, t, p) where {T}\n\nCompute the correction term for the convex hull of a point and its linear map with an interval matrix in order to contain all trajectories of a linear system.\n\nInput\n\nA – interval matrix\nt – non-negative time value\np – order of the approximation\n\nOutput\n\nAn interval matrix representing the correction term.\n\nAlgorithm\n\nSee Theorem 3 in [1].\n\n[1] M. Althoff, O. Stursberg, M. Buss. Reachability Analysis of Linear Systems with Uncertain Parameters and Inputs. CDC 2007.\n\n\n\n\n\n","category":"function"}]
}
